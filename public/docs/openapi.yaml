openapi: 3.0.3
info:
  title: 'API документация'
  description: 'API документация для litro.kz'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/autoPart/get/{skip}/{take}':
    get:
      summary: 'Получить список - AutoPart'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'AutoPart - АвтомобильЗапчасти'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: dolore
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: ratione
        required: true
        schema:
          type: string
  '/api/autoPart/getById/{id}':
    get:
      summary: 'Получить данные через ID - AutoPart'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'AutoPart - АвтомобильЗапчасти'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: doloremque
        required: true
        schema:
          type: string
  '/api/autoPartCategory/get/{skip}/{take}':
    get:
      summary: 'Получить список - AutoPartCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 6
                  data: []
                properties:
                  count:
                    type: integer
                    example: 6
                  data:
                    type: array
                    example: []
      tags:
        - 'AutoPartCategory - АвтомобильЗапчастиКатегория'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: inventore
        required: true
        schema:
          type: string
  '/api/autoPartCategory/getById/{id}':
    get:
      summary: 'Получить данные через ID - AutoPartCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'AutoPartCategory - АвтомобильЗапчастиКатегория'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: consectetur
        required: true
        schema:
          type: string
  '/api/autoPartImage/get/{skip}/{take}':
    get:
      summary: 'Получить список - AutoPartImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 1
                  data: []
                properties:
                  count:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - AutoPartImage
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: doloremque
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: eos
        required: true
        schema:
          type: string
  '/api/autoPartImage/getByAutoPartId/{autoPartId}/{skip}/{take}':
    get:
      summary: 'Получить данные через AutoPartID - AutoPartImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - AutoPartImage
      security: []
    parameters:
      -
        in: path
        name: autoPartId
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
  '/api/autoPartImage/getById/{id}':
    get:
      summary: 'Получить данные через ID - AutoPartImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - AutoPartImage
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: aut
        required: true
        schema:
          type: string
  '/api/autoPartParam/get/{skip}/{take}':
    get:
      summary: 'Получить список - AutoPartParam'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 7
                  data: []
                properties:
                  count:
                    type: integer
                    example: 7
                  data:
                    type: array
                    example: []
      tags:
        - 'AutoPartParam - АвтомобильЗапчастиПараметры'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: expedita
        required: true
        schema:
          type: string
  '/api/autoPartParam/getById/{id}':
    get:
      summary: 'Получить данные через ID - AutoPartParam'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'AutoPartParam - АвтомобильЗапчастиПараметры'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: aut
        required: true
        schema:
          type: string
  '/api/autoPartParamOption/get/{skip}/{take}':
    get:
      summary: 'Получить список - AutoPartParamOption'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 9
                  data: []
                properties:
                  count:
                    type: integer
                    example: 9
                  data:
                    type: array
                    example: []
      tags:
        - 'AutoPartParamOption - АвтомобильЗапчастиПараметрыОпции'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/api/autoPartType/get/{skip}/{take}':
    get:
      summary: 'Получить список - AutoPartType'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'AutoPartType - АвтомобильЗапчастиТип'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quod
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: vitae
        required: true
        schema:
          type: string
  '/api/car/get/{skip}/{take}':
    get:
      summary: 'Получить список - Car'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 19777
                  data: []
                properties:
                  count:
                    type: integer
                    example: 19777
                  data:
                    type: array
                    example: []
      tags:
        - 'Car - Автомобиль'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: odio
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: praesentium
        required: true
        schema:
          type: string
  '/api/car/getByOrderCardId/{orderCardId}':
    get:
      summary: 'Получить данные через OrderCardID - Car'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Car - Автомобиль'
      security: []
    parameters:
      -
        in: path
        name: orderCardId
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/car/getById/{id}':
    get:
      summary: 'Получить данные через ID - Car'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Car - Автомобиль'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: tempore
        required: true
        schema:
          type: string
  '/api/carBrand/get/{skip}/{take}':
    get:
      summary: 'Получить список - CarBrand'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 134
                  data: []
                properties:
                  count:
                    type: integer
                    example: 134
                  data:
                    type: array
                    example: []
      tags:
        - 'CarBrand - АвтомобильБрэнд'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: accusamus
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: similique
        required: true
        schema:
          type: string
  '/api/carCategory/get/{skip}/{take}':
    get:
      summary: 'Получить список - CarCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 3
                  data: []
                properties:
                  count:
                    type: integer
                    example: 3
                  data:
                    type: array
                    example: []
      tags:
        - 'CarCategory - АвтомобильКатегория'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/carModel/get/{skip}/{take}':
    get:
      summary: 'Получить список - CarModel'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 4011
                  data: []
                properties:
                  count:
                    type: integer
                    example: 4011
                  data:
                    type: array
                    example: []
      tags:
        - 'CarModel - АвтомобильМодель'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quidem
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: sed
        required: true
        schema:
          type: string
  '/api/carModel/getByCarBrandId/{carBrandId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CarBrandID - CarModel'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CarModel - АвтомобильМодель'
      security: []
    parameters:
      -
        in: path
        name: carBrandId
        description: ''
        example: iste
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: incidunt
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: quis
        required: true
        schema:
          type: string
  '/api/carModel/getById/{id}':
    get:
      summary: 'Получить данные через ID - CarModel'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Модель не найдена'
                properties:
                  message:
                    type: string
                    example: 'Модель не найдена'
      tags:
        - 'CarModel - АвтомобильМодель'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: necessitatibus
        required: true
        schema:
          type: string
  '/api/carModelAveragePrice/get/{skip}/{take}':
    get:
      summary: 'Получить список - CarModelAveragePrice'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CarModelAveragePrice - АвтомобильМодельСредняяЦена'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: rem
        required: true
        schema:
          type: string
  '/api/carModelAveragePrice/getByCarModelId/{carModelId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CarModelID - CarModelAveragePrice'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CarModelAveragePrice - АвтомобильМодельСредняяЦена'
      security: []
    parameters:
      -
        in: path
        name: carModelId
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: quibusdam
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/carModelAveragePrice/getById/{id}':
    get:
      summary: 'Получить данные через ID - CarModelAveragePrice'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'CarModelAveragePrice - АвтомобильМодельСредняяЦена'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: odio
        required: true
        schema:
          type: string
  '/api/card/get/{skip}/{take}':
    get:
      summary: 'Получить список - Card'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 239
                  data: []
                properties:
                  count:
                    type: integer
                    example: 239
                  data:
                    type: array
                    example: []
      tags:
        - 'Card - Карточка'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: perspiciatis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: earum
        required: true
        schema:
          type: string
  '/api/card/getById/{id}':
    get:
      summary: 'Получить данные через ID - Card'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Card - Карточка'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: accusamus
        required: true
        schema:
          type: string
  '/api/cardCategory/get/{skip}/{take}':
    get:
      summary: 'Получить список - CardCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 3
                  data: []
                properties:
                  count:
                    type: integer
                    example: 3
                  data:
                    type: array
                    example: []
      tags:
        - 'CardCategory - КарточкаКатегория'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: labore
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/cardRange/get/{skip}/{take}':
    get:
      summary: 'Получить список - CardRange'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardRange - КарточкаДиапазон'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: magni
        required: true
        schema:
          type: string
  '/api/cardRange/getByCardId/{cardId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CardID - CardRange'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardRange - КарточкаДиапазон'
      security: []
    parameters:
      -
        in: path
        name: cardId
        description: ''
        example: non
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: rerum
        required: true
        schema:
          type: string
  '/api/cardRange/getByCityId/{cityId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CityID - CardRange'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardRange - КарточкаДиапазон'
      security: []
    parameters:
      -
        in: path
        name: cityId
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: fugit
        required: true
        schema:
          type: string
  '/api/cardRange/getById/{id}':
    get:
      summary: 'Получить данные через ID - CardRange'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'CardRange - КарточкаДиапазон'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: et
        required: true
        schema:
          type: string
  '/api/cardService/get/{skip}/{take}':
    get:
      summary: 'Получить список - CardService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 3540
                  data: []
                properties:
                  count:
                    type: integer
                    example: 3540
                  data:
                    type: array
                    example: []
      tags:
        - 'CardService - КарточкаСервис'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/cardService/getByCardId/{cardId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CardID - CardService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardService - КарточкаСервис'
      security: []
    parameters:
      -
        in: path
        name: cardId
        description: ''
        example: iure
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: quos
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
  '/api/cardService/getByServiceId/{cityId}/{skip}/{take}':
    get:
      summary: 'Получить данные через ServiceID - CardService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardService - КарточкаСервис'
      security: []
    parameters:
      -
        in: path
        name: cityId
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: impedit
        required: true
        schema:
          type: string
  '/api/cardService/getById/{id}':
    get:
      summary: 'Получить данные через ID - CardService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'CardService - КарточкаСервис'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: ipsa
        required: true
        schema:
          type: string
  '/api/city/get/{skip}/{take}':
    get:
      summary: 'Получить список - City'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 26
                  data: []
                properties:
                  count:
                    type: integer
                    example: 26
                  data:
                    type: array
                    example: []
      tags:
        - 'City - Город'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: aliquam
        required: true
        schema:
          type: string
  '/api/cityService/get/{skip}/{take}':
    get:
      summary: 'Получить список - CityService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 204
                  data: []
                properties:
                  count:
                    type: integer
                    example: 204
                  data:
                    type: array
                    example: []
      tags:
        - 'CityService - ГородСервис'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: nostrum
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dignissimos
        required: true
        schema:
          type: string
  '/api/cityService/getByServiceId/{serviceId}/{skip}/{take}':
    get:
      summary: 'Получить данные через ServiceID - CityService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CityService - ГородСервис'
      security: []
    parameters:
      -
        in: path
        name: serviceId
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: commodi
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/cityService/getByCityId/{cityId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CityID - CityService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CityService - ГородСервис'
      security: []
    parameters:
      -
        in: path
        name: cityId
        description: ''
        example: animi
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: distinctio
        required: true
        schema:
          type: string
  '/api/cityService/getById/{id}':
    get:
      summary: 'Получить данные через ID - CityService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'CityService - ГородСервис'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: cumque
        required: true
        schema:
          type: string
  /api/code/create:
    post:
      summary: 'Создать - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Code - Код'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: validation.max.
                  example: wodrkpnwfsojfiwk
                email:
                  type: string
                  description: validation.max.
                  example: zvcyemdvpqhaqlluncrszzzwqmlabninswhvvcclhsxtzxwavxmmspqvdcnyhsnmtbzmbvrbaoimhmmdpyvkycfjfijosnoashsii
      security: []
  /api/code/update:
    post:
      summary: 'Обновить - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Code - Код'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: validation.max.
                  example: qkfgyjbdkzoaheulrcfprtstazikzdmwtofnbertnyhiaxpkvttvbingfqdiejwpcpjynrtuegxgaumvnyd
                email:
                  type: string
                  description: validation.max.
                  example: mfpldswewssriubpamgimqwsjxalbycznjchrlgichdfnwqvclufpxtvqvyiabjfuwihalomrcpmvxjusb
                code:
                  type: integer
                  description: 'validation.min validation.max.'
                  example: 3084
              required:
                - code
      security: []
  '/api/code/get/{skip}/{take}':
    get:
      summary: 'Получить список - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 17268
                  data: []
                properties:
                  count:
                    type: integer
                    example: 17268
                  data:
                    type: array
                    example: []
      tags:
        - 'Code - Код'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: corporis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
  '/api/code/getByPhone/{phone}':
    get:
      summary: 'Получить данные через Phone - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Code - Код'
      security: []
    parameters:
      -
        in: path
        name: phone
        description: ''
        example: quos
        required: true
        schema:
          type: string
  '/api/code/getByEmail/{email}':
    get:
      summary: 'Получить данные через Email - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Code - Код'
      security: []
    parameters:
      -
        in: path
        name: email
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
  '/api/code/getById/{id}':
    get:
      summary: 'Получить данные через ID - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Code - Код'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: aliquam
        required: true
        schema:
          type: string
  '/api/country/get/{skip}/{take}':
    get:
      summary: 'Получить список - Country'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 1
                  data: []
                properties:
                  count:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - 'Country - Страна'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: dolor
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: illo
        required: true
        schema:
          type: string
  '/api/currency/get/{skip}/{take}':
    get:
      summary: 'Получить список - Currency'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 1
                  data: []
                properties:
                  count:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - 'Currency - Валюта'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: tempora
        required: true
        schema:
          type: string
  '/api/driver/get/{skip}/{take}':
    get:
      summary: 'Получить список - Driver'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 21453
                  data: []
                properties:
                  count:
                    type: integer
                    example: 21453
                  data:
                    type: array
                    example: []
      tags:
        - 'Driver - Водитель'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: numquam
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: quidem
        required: true
        schema:
          type: string
  '/api/driver/getByOrderCardId/{orderCardId}':
    get:
      summary: 'Получить данные через OrderCardID - Driver'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Driver - Водитель'
      security: []
    parameters:
      -
        in: path
        name: orderCardId
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/driver/getById/{id}':
    get:
      summary: 'Получить данные через ID - Driver'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Driver - Водитель'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: aspernatur
        required: true
        schema:
          type: string
  '/api/ecoService/get/{skip}/{take}':
    get:
      summary: 'Получить список - EcoService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 11
                  data: []
                properties:
                  count:
                    type: integer
                    example: 11
                  data:
                    type: array
                    example: []
      tags:
        - 'EcoService - ЭкоСервис'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: provident
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: labore
        required: true
        schema:
          type: string
  '/api/ecoService/getById/{id}':
    get:
      summary: 'Получить данные через ID - EcoService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'EcoService - ЭкоСервис'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: est
        required: true
        schema:
          type: string
  '/api/gift/get/{skip}/{take}':
    get:
      summary: 'Получить список - Gift'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 1838
                  data: []
                properties:
                  count:
                    type: integer
                    example: 1838
                  data:
                    type: array
                    example: []
      tags:
        - 'Gift - Подарок'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
  '/api/gift/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - Gift'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Gift - Подарок'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: tempora
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: id
        required: true
        schema:
          type: string
  '/api/gift/getByCardId/{cardId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CardID - Gift'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Gift - Подарок'
      security: []
    parameters:
      -
        in: path
        name: cardId
        description: ''
        example: iste
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: quae
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/gift/getById/{id}':
    get:
      summary: 'Получить данные через ID - Gift'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Gift - Подарок'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: ipsa
        required: true
        schema:
          type: string
  '/api/image/get/{skip}/{take}':
    get:
      summary: 'Получить список - Image'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 753
                  data: []
                properties:
                  count:
                    type: integer
                    example: 753
                  data:
                    type: array
                    example: []
      tags:
        - 'Image - Картинка'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: repellat
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: facilis
        required: true
        schema:
          type: string
  '/api/image/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - Image'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Image - Картинка'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: officia
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: non
        required: true
        schema:
          type: string
  '/api/image/getById/{id}':
    get:
      summary: 'Получить данные через ID - Image'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Image - Картинка'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: dolor
        required: true
        schema:
          type: string
  '/api/insuranceCategory/get/{skip}/{take}':
    get:
      summary: 'Получить список - InsuranceCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 5
                  data: []
                properties:
                  count:
                    type: integer
                    example: 5
                  data:
                    type: array
                    example: []
      tags:
        - 'InsuranceCategory - СтрахованияКатегория'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
  '/api/insuranceCategory/getById/{id}':
    get:
      summary: 'Получить данные через ID - InsuranceCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'InsuranceCategory - СтрахованияКатегория'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: voluptates
        required: true
        schema:
          type: string
  '/api/insuranceCompany/get/{skip}/{take}':
    get:
      summary: 'Получить список - InsuranceCompany'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 6
                  data: []
                properties:
                  count:
                    type: integer
                    example: 6
                  data:
                    type: array
                    example: []
      tags:
        - 'InsuranceCompany - СтрахованияКомпания'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/insuranceCompany/getById/{id}':
    get:
      summary: 'Получить данные через ID - InsuranceCompany'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'InsuranceCompany - СтрахованияКомпания'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: a
        required: true
        schema:
          type: string
  '/api/insuranceCompanyProduct/get/{skip}/{take}':
    get:
      summary: 'Получить список - InsuranceCompanyProduct'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 4
                  data: []
                properties:
                  count:
                    type: integer
                    example: 4
                  data:
                    type: array
                    example: []
      tags:
        - 'InsuranceCompanyProduct - СтрахованияКомпанияПродукт'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: modi
        required: true
        schema:
          type: string
  '/api/insuranceCompanyProduct/getByInsuranceCompanyId/{insuranceCompanyId}/{skip}/{take}':
    get:
      summary: 'Получить данные через InsuranceCompanyID - InsuranceCompanyProduct'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'InsuranceCompanyProduct - СтрахованияКомпанияПродукт'
      security: []
    parameters:
      -
        in: path
        name: insuranceCompanyId
        description: ''
        example: consectetur
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/insuranceCompanyProduct/getById/{id}':
    get:
      summary: 'Получить данные через ID - InsuranceCompanyProduct'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'InsuranceCompanyProduct - СтрахованияКомпанияПродукт'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: magni
        required: true
        schema:
          type: string
  '/api/insuranceCompanyRequestLog/get/{skip}/{take}':
    get:
      summary: 'Получить список - InsuranceCompanyRequestLog'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 1337
                  data: []
                properties:
                  count:
                    type: integer
                    example: 1337
                  data:
                    type: array
                    example: []
      tags:
        - 'InsuranceCompanyRequestLog - СтрахованияКомпанияЗапросЛог'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: repellat
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: rerum
        required: true
        schema:
          type: string
  '/api/insuranceCompanyRequestLog/getByInsuranceCompanyId/{insuranceCompanyId}/{skip}/{take}':
    get:
      summary: 'Получить данные через InsuranceCompanyID - InsuranceCompanyRequestLog'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'InsuranceCompanyRequestLog - СтрахованияКомпанияЗапросЛог'
      security: []
    parameters:
      -
        in: path
        name: insuranceCompanyId
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
  '/api/insuranceCompanyRequestLog/getById/{id}':
    get:
      summary: 'Получить данные через ID - InsuranceCompanyRequestLog'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'InsuranceCompanyRequestLog - СтрахованияКомпанияЗапросЛог'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: amet
        required: true
        schema:
          type: string
  '/api/insuranceImage/get/{skip}/{take}':
    get:
      summary: 'Получить список - InsuranceImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 24
                  data: []
                properties:
                  count:
                    type: integer
                    example: 24
                  data:
                    type: array
                    example: []
      tags:
        - InsuranceImage
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: eius
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: fugiat
        required: true
        schema:
          type: string
  '/api/insuranceImage/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - InsuranceImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - InsuranceImage
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: facilis
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: debitis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: voluptatibus
        required: true
        schema:
          type: string
  '/api/insuranceImage/getByInsuranceCompanyId/{insuranceCompanyId}/{skip}/{take}':
    get:
      summary: 'Получить данные через InsuranceCompanyID - InsuranceImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - InsuranceImage
      security: []
    parameters:
      -
        in: path
        name: insuranceCompanyId
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/insuranceImage/getById/{id}':
    get:
      summary: 'Получить данные через ID - InsuranceImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - InsuranceImage
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: placeat
        required: true
        schema:
          type: string
  '/api/insuranceKaskoPolicy/get/{skip}/{take}':
    get:
      summary: 'Получить список - InsuranceKaskoPolicy'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 61
                  data: []
                properties:
                  count:
                    type: integer
                    example: 61
                  data:
                    type: array
                    example: []
      tags:
        - 'InsuranceKaskoPolicy - СтрахованияКаскоПолитика'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/insuranceKaskoPolicy/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - InsuranceKaskoPolicy'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'InsuranceKaskoPolicy - СтрахованияКаскоПолитика'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: odio
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: nostrum
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/insuranceKaskoPolicy/getByUserCarId/{userCarId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserCarID - InsuranceKaskoPolicy'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'InsuranceKaskoPolicy - СтрахованияКаскоПолитика'
      security: []
    parameters:
      -
        in: path
        name: userCarId
        description: ''
        example: rem
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dolor
        required: true
        schema:
          type: string
  '/api/insuranceKaskoPolicy/getById/{id}':
    get:
      summary: 'Получить данные через ID - InsuranceKaskoPolicy'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'InsuranceKaskoPolicy - СтрахованияКаскоПолитика'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: voluptas
        required: true
        schema:
          type: string
  '/api/insuranceLinkReferRecord/get/{skip}/{take}':
    get:
      summary: 'Получить список - InsuranceLinkReferRecord'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 15
                  data: []
                properties:
                  count:
                    type: integer
                    example: 15
                  data:
                    type: array
                    example: []
      tags:
        - InsuranceLinkReferRecord
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: asperiores
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
  '/api/insuranceLinkReferRecord/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - InsuranceLinkReferRecord'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - InsuranceLinkReferRecord
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: magni
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/insuranceLinkReferRecord/getByInsuranceCompanyId/{insuranceCompanyId}/{skip}/{take}':
    get:
      summary: 'Получить данные через InsuranceCompanyID - InsuranceLinkReferRecord'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - InsuranceLinkReferRecord
      security: []
    parameters:
      -
        in: path
        name: insuranceCompanyId
        description: ''
        example: sunt
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: maiores
        required: true
        schema:
          type: string
  '/api/insuranceLinkReferRecord/getById/{id}':
    get:
      summary: 'Получить данные через ID - InsuranceLinkReferRecord'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - InsuranceLinkReferRecord
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: eum
        required: true
        schema:
          type: string
  '/api/insuranceSelect/get/{skip}/{take}':
    get:
      summary: 'Получить список - InsuranceSelect'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 1
                  data: []
                properties:
                  count:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - InsuranceSelect
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: minima
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/insuranceSelect/getById/{id}':
    get:
      summary: 'Получить данные через ID - InsuranceSelect'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - InsuranceSelect
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: eius
        required: true
        schema:
          type: string
  '/api/insuranceSelectOption/get/{skip}/{take}':
    get:
      summary: 'Получить список - InsuranceSelectOption'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 4
                  data: []
                properties:
                  count:
                    type: integer
                    example: 4
                  data:
                    type: array
                    example: []
      tags:
        - InsuranceSelectOption
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: iste
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/insuranceSelectOption/getById/{id}':
    get:
      summary: 'Получить данные через ID - InsuranceSelectOption'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - InsuranceSelectOption
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: ducimus
        required: true
        schema:
          type: string
  '/api/lawyer/get/{skip}/{take}':
    get:
      summary: 'Получить список - Lawyer'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 1
                  data: []
                properties:
                  count:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - Lawyer
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dolores
        required: true
        schema:
          type: string
  '/api/lawyer/getById/{id}':
    get:
      summary: 'Получить данные через ID - Lawyer'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - Lawyer
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: dolor
        required: true
        schema:
          type: string
  '/api/lawyerCity/get/{skip}/{take}':
    get:
      summary: 'Получить список - LawyerCity'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 1
                  data: []
                properties:
                  count:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - LawyerCity
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: numquam
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/lawyerCity/getByCityId/{cityId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CityID - LawyerCity'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - LawyerCity
      security: []
    parameters:
      -
        in: path
        name: cityId
        description: ''
        example: impedit
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: quod
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/lawyerCity/getById/{id}':
    get:
      summary: 'Получить данные через ID - LawyerCity'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - LawyerCity
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: rerum
        required: true
        schema:
          type: string
  '/api/lawyerContact/get/{skip}/{take}':
    get:
      summary: 'Получить список - LawyerContact'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 1
                  data: []
                properties:
                  count:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - LawyerContact
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: velit
        required: true
        schema:
          type: string
  '/api/lawyerContact/getByLawyerId/{lawyerId}/{skip}/{take}':
    get:
      summary: 'Получить данные через LawyerID - LawyerContact'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - LawyerContact
      security: []
    parameters:
      -
        in: path
        name: lawyerId
        description: ''
        example: amet
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
  '/api/lawyerContact/getById/{id}':
    get:
      summary: 'Получить данные через ID - LawyerContact'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - LawyerContact
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: in
        required: true
        schema:
          type: string
  '/api/lawyerContactAccess/get/{skip}/{take}':
    get:
      summary: 'Получить список - LawyerContactAccess'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 36
                  data: []
                properties:
                  count:
                    type: integer
                    example: 36
                  data:
                    type: array
                    example: []
      tags:
        - LawyerContactAccess
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: vero
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/lawyerContactAccess/getByLawyerId/{lawyerId}/{skip}/{take}':
    get:
      summary: 'Получить данные через LawyerID - LawyerContactAccess'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - LawyerContactAccess
      security: []
    parameters:
      -
        in: path
        name: lawyerId
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: soluta
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dolor
        required: true
        schema:
          type: string
  '/api/lawyerContactAccess/getById/{id}':
    get:
      summary: 'Получить данные через ID - LawyerContactAccess'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - LawyerContactAccess
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: hic
        required: true
        schema:
          type: string
  '/api/lawyerService/get/{skip}/{take}':
    get:
      summary: 'Получить список - LawyerService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 5
                  data: []
                properties:
                  count:
                    type: integer
                    example: 5
                  data:
                    type: array
                    example: []
      tags:
        - LawyerService
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: voluptate
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
  '/api/lawyerService/getById/{id}':
    get:
      summary: 'Получить данные через ID - LawyerService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - LawyerService
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: sunt
        required: true
        schema:
          type: string
  '/api/lawyerServicePivot/get/{skip}/{take}':
    get:
      summary: 'Получить список - LawyerServicePivot'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 2
                  data: []
                properties:
                  count:
                    type: integer
                    example: 2
                  data:
                    type: array
                    example: []
      tags:
        - LawyerServicePivot
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quidem
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/lawyerServicePivot/getByLawyerId/{lawyerId}/{skip}/{take}':
    get:
      summary: 'Получить данные через LawyerID - LawyerServicePivot'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - LawyerServicePivot
      security: []
    parameters:
      -
        in: path
        name: lawyerId
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: vitae
        required: true
        schema:
          type: string
  '/api/lawyerServicePivot/getById/{id}':
    get:
      summary: 'Получить данные через ID - LawyerServicePivot'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - LawyerServicePivot
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: recusandae
        required: true
        schema:
          type: string
  '/api/message/getById/{id}':
    get:
      summary: 'Получить данные через ID - Message'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - Message
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: repellat
        required: true
        schema:
          type: string
  '/api/message/get/{skip}/{take}':
    get:
      summary: 'Получить список - Message'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 6
                  data: []
                properties:
                  count:
                    type: integer
                    example: 6
                  data:
                    type: array
                    example: []
      tags:
        - Message
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: eum
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: deleniti
        required: true
        schema:
          type: string
  '/api/moneyOperation/get/{skip}/{take}':
    get:
      summary: 'Получить список - MoneyOperation'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 158
                  data: []
                properties:
                  count:
                    type: integer
                    example: 158
                  data:
                    type: array
                    example: []
      tags:
        - 'MoneyOperation - ДеньгиОперация'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/moneyOperation/getById/{id}':
    get:
      summary: 'Получить данные через ID - MoneyOperation'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'MoneyOperation - ДеньгиОперация'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: aliquid
        required: true
        schema:
          type: string
  '/api/moneyOperationType/get/{skip}/{take}':
    get:
      summary: 'Получить список - MoneyOperationType'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 4
                  data: []
                properties:
                  count:
                    type: integer
                    example: 4
                  data:
                    type: array
                    example: []
      tags:
        - 'MoneyOperationType - ДеньгиОперацияТип'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: necessitatibus
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: sapiente
        required: true
        schema:
          type: string
  '/api/moneyOperationType/getById/{id}':
    get:
      summary: 'Получить данные через ID - MoneyOperationType'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'MoneyOperationType - ДеньгиОперацияТип'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: corrupti
        required: true
        schema:
          type: string
  '/api/news/get/{skip}/{take}':
    get:
      summary: 'Получить список - News'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 62
                  data: []
                properties:
                  count:
                    type: integer
                    example: 62
                  data:
                    type: array
                    example: []
      tags:
        - 'News - Новости'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quo
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: eum
        required: true
        schema:
          type: string
  '/api/news/getById/{id}':
    get:
      summary: 'Получить данные через ID - News'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'News - Новости'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/newsCategory/get/{skip}/{take}':
    get:
      summary: 'Получить список - NewsCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 3
                  data: []
                properties:
                  count:
                    type: integer
                    example: 3
                  data:
                    type: array
                    example: []
      tags:
        - 'NewsCategory - НовостиКатегория'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: eum
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: magnam
        required: true
        schema:
          type: string
  '/api/orderCard/get/{skip}/{take}':
    get:
      summary: 'Получить список - OrderCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 18440
                  data: []
                properties:
                  count:
                    type: integer
                    example: 18440
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderCard - ЗаказКарточка'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: fugit
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: beatae
        required: true
        schema:
          type: string
  '/api/orderCard/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - OrderCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderCard - ЗаказКарточка'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: tempora
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: neque
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/orderCard/getByCardId/{cardId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CardID - OrderCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderCard - ЗаказКарточка'
      security: []
    parameters:
      -
        in: path
        name: cardId
        description: ''
        example: provident
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: iure
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/orderCard/getById/{id}':
    get:
      summary: 'Получить данные через ID - OrderCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'OrderCard - ЗаказКарточка'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: eligendi
        required: true
        schema:
          type: string
  '/api/orderCardOld/get/{skip}/{take}':
    get:
      summary: 'Получить список - OrderCardOld'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 13
                  data: []
                properties:
                  count:
                    type: integer
                    example: 13
                  data:
                    type: array
                    example: []
      tags:
        - OrderCardOld
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: eius
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: saepe
        required: true
        schema:
          type: string
  '/api/orderCardOld/getById/{id}':
    get:
      summary: 'Получить данные через ID - OrderCardOld'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - OrderCardOld
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: qui
        required: true
        schema:
          type: string
  '/api/orderService/get/{skip}/{take}':
    get:
      summary: 'Получить список - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 3348
                  data: []
                properties:
                  count:
                    type: integer
                    example: 3348
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: non
        required: true
        schema:
          type: string
  '/api/orderService/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
  '/api/orderService/getByCityId/{cityId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CityID - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 1913
                  data: []
                properties:
                  count:
                    type: integer
                    example: 1913
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: cityId
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: nam
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: officia
        required: true
        schema:
          type: string
  '/api/orderService/getByPlaceId/{placeId}/{skip}/{take}':
    get:
      summary: 'Получить данные через PlaceID - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: placeId
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dicta
        required: true
        schema:
          type: string
  '/api/orderService/getByOrderCardId/{orderCardId}/{skip}/{take}':
    get:
      summary: 'Получить данные через OrderCardID - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: orderCardId
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/orderService/getById/{id}':
    get:
      summary: 'Получить данные через ID - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: corrupti
        required: true
        schema:
          type: string
  '/api/orderServiceService/get/{skip}/{take}':
    get:
      summary: 'Получить список - OrderServiceService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 2624
                  data: []
                properties:
                  count:
                    type: integer
                    example: 2624
                  data:
                    type: array
                    example: []
      tags:
        - OrderServiceService
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
  '/api/orderServiceService/getByOrderServiceId/{orderServiceId}/{skip}/{take}':
    get:
      summary: 'Получить данные через OrderServiceID - OrderServiceService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - OrderServiceService
      security: []
    parameters:
      -
        in: path
        name: orderServiceId
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: impedit
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: perspiciatis
        required: true
        schema:
          type: string
  '/api/orderServiceService/getByServiceId/{serviceId}/{skip}/{take}':
    get:
      summary: 'Получить данные через ServiceID - OrderServiceService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - OrderServiceService
      security: []
    parameters:
      -
        in: path
        name: serviceId
        description: ''
        example: temporibus
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: natus
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: magni
        required: true
        schema:
          type: string
  '/api/orderServiceService/getById/{id}':
    get:
      summary: 'Получить данные через ID - OrderServiceService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - OrderServiceService
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: iure
        required: true
        schema:
          type: string
  '/api/partner/get/{skip}/{take}':
    get:
      summary: 'Получить список - Partner'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 61
                  data: []
                properties:
                  count:
                    type: integer
                    example: 61
                  data:
                    type: array
                    example: []
      tags:
        - 'Partner - Партнер'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: nostrum
        required: true
        schema:
          type: string
  '/api/partner/getById/{id}':
    get:
      summary: 'Получить данные через ID - Partner'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Partner - Партнер'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: quis
        required: true
        schema:
          type: string
  '/api/partnerCard/get/{skip}/{take}':
    get:
      summary: 'Получить список - PartnerCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 13
                  data: []
                properties:
                  count:
                    type: integer
                    example: 13
                  data:
                    type: array
                    example: []
      tags:
        - PartnerCard
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: vero
        required: true
        schema:
          type: string
  '/api/partnerCard/getByCardId/{cardId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CardID - PartnerCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - PartnerCard
      security: []
    parameters:
      -
        in: path
        name: cardId
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: earum
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: voluptates
        required: true
        schema:
          type: string
  '/api/partnerCard/getByPartnerId/{partnerId}/{skip}/{take}':
    get:
      summary: 'Получить данные через PartnerID - PartnerCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - PartnerCard
      security: []
    parameters:
      -
        in: path
        name: partnerId
        description: ''
        example: similique
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: eos
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: natus
        required: true
        schema:
          type: string
  '/api/partnerCard/getById/{id}':
    get:
      summary: 'Получить данные через ID - PartnerCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - PartnerCard
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: eaque
        required: true
        schema:
          type: string
  '/api/partnerPurchase/get/{skip}/{take}':
    get:
      summary: 'Получить список - PartnerPurchase'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 19
                  data: []
                properties:
                  count:
                    type: integer
                    example: 19
                  data:
                    type: array
                    example: []
      tags:
        - PartnerPurchase
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: laborum
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: rerum
        required: true
        schema:
          type: string
  '/api/partnerPurchase/getByPartnerId/{partnerId}/{skip}/{take}':
    get:
      summary: 'Получить данные через PartnerID - PartnerPurchase'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - PartnerPurchase
      security: []
    parameters:
      -
        in: path
        name: partnerId
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: totam
        required: true
        schema:
          type: string
  '/api/partnerPurchase/getById/{id}':
    get:
      summary: 'Получить данные через ID - PartnerPurchase'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - PartnerPurchase
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: sed
        required: true
        schema:
          type: string
  '/api/payment/get/{skip}/{take}':
    get:
      summary: 'Получить список - Payment'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 199
                  data: []
                properties:
                  count:
                    type: integer
                    example: 199
                  data:
                    type: array
                    example: []
      tags:
        - 'Payment - Платеж'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: nam
        required: true
        schema:
          type: string
  '/api/payment/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - Payment'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Payment - Платеж'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: illo
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/payment/getById/{id}':
    get:
      summary: 'Получить данные через ID - Payment'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Payment - Платеж'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: quibusdam
        required: true
        schema:
          type: string
  '/api/paymentSystem/get/{skip}/{take}':
    get:
      summary: 'Получить список - PaymentSystem'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 2
                  data: []
                properties:
                  count:
                    type: integer
                    example: 2
                  data:
                    type: array
                    example: []
      tags:
        - 'PaymentSystem - ПлатежСистема'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: repudiandae
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dolores
        required: true
        schema:
          type: string
  '/api/paymentSystem/getById/{id}':
    get:
      summary: 'Получить данные через ID - PaymentSystem'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'PaymentSystem - ПлатежСистема'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: dignissimos
        required: true
        schema:
          type: string
  '/api/place/get/{skip}/{take}':
    get:
      summary: 'Получить список - Place'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 18
                  data: []
                properties:
                  count:
                    type: integer
                    example: 18
                  data:
                    type: array
                    example: []
      tags:
        - 'Place - Места'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: quisquam
        required: true
        schema:
          type: string
  '/api/place/getByServiceId/{serviceId}/{skip}/{take}':
    get:
      summary: 'Получить данные через ServiceID - Place'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Place - Места'
      security: []
    parameters:
      -
        in: path
        name: serviceId
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: tempora
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/place/getByCityId/{cityId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CityID - Place'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Place - Места'
      security: []
    parameters:
      -
        in: path
        name: cityId
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: autem
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: occaecati
        required: true
        schema:
          type: string
  '/api/place/getById/{id}':
    get:
      summary: 'Получить данные через ID - Place'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Place - Места'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: assumenda
        required: true
        schema:
          type: string
  '/api/recurrent/get/{skip}/{take}':
    get:
      summary: 'Получить список - Recurrent'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 75
                  data: []
                properties:
                  count:
                    type: integer
                    example: 75
                  data:
                    type: array
                    example: []
      tags:
        - 'Recurrent - Повторяющийся'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/recurrent/getById/{id}':
    get:
      summary: 'Получить данные через ID - Recurrent'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Recurrent - Повторяющийся'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: sit
        required: true
        schema:
          type: string
  '/api/region/get/{skip}/{take}':
    get:
      summary: 'Получить список - Region'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 14
                  data: []
                properties:
                  count:
                    type: integer
                    example: 14
                  data:
                    type: array
                    example: []
      tags:
        - 'Region - Регион'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: exercitationem
        required: true
        schema:
          type: string
  '/api/sPartnerPoint/get/{skip}/{take}':
    get:
      summary: 'Получить список - SPartnerPoint'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 21
                  data: []
                properties:
                  count:
                    type: integer
                    example: 21
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerPoint
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quae
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/sPartnerPoint/getById/{id}':
    get:
      summary: 'Получить данные через ID - SPartnerPoint'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - SPartnerPoint
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: asperiores
        required: true
        schema:
          type: string
  '/api/sPartnerPointCategory/get/{skip}/{take}':
    get:
      summary: 'Получить список - SPartnerPointCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 24
                  data: []
                properties:
                  count:
                    type: integer
                    example: 24
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerPointCategory
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: officia
        required: true
        schema:
          type: string
  '/api/sPartnerPointCategory/getBySPartnerPointId/{sPartnerPointId}/{skip}/{take}':
    get:
      summary: 'Получить данные через SPartnerPointID - SPartnerPointCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerPointCategory
      security: []
    parameters:
      -
        in: path
        name: sPartnerPointId
        description: ''
        example: quis
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
  '/api/sPartnerPointCategory/getById/{id}':
    get:
      summary: 'Получить данные через ID - SPartnerPointCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - SPartnerPointCategory
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: qui
        required: true
        schema:
          type: string
  '/api/sPartnerPointRequisite/get/{skip}/{take}':
    get:
      summary: 'Получить список - SPartnerPointRequisite'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 21
                  data: []
                properties:
                  count:
                    type: integer
                    example: 21
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerPointRequisite
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: nulla
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/api/sPartnerPointRequisite/getBySPartnerPointId/{sPartnerPointId}/{skip}/{take}':
    get:
      summary: 'Получить данные через SPartnerPointID - SPartnerPointRequisite'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerPointRequisite
      security: []
    parameters:
      -
        in: path
        name: sPartnerPointId
        description: ''
        example: labore
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: repellendus
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: culpa
        required: true
        schema:
          type: string
  '/api/sPartnerPointRequisite/getById/{id}':
    get:
      summary: 'Получить данные через ID - SPartnerPointRequisite'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - SPartnerPointRequisite
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: at
        required: true
        schema:
          type: string
  '/api/sPartnerPointWallet/get/{skip}/{take}':
    get:
      summary: 'Получить список - SPartnerPointWallet'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 11
                  data: []
                properties:
                  count:
                    type: integer
                    example: 11
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerPointWallet
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: distinctio
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: neque
        required: true
        schema:
          type: string
  '/api/sPartnerPointWallet/getBySPartnerPointId/{sPartnerPointId}/{skip}/{take}':
    get:
      summary: 'Получить данные через SPartnerPointID - SPartnerPointWallet'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerPointWallet
      security: []
    parameters:
      -
        in: path
        name: sPartnerPointId
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: vel
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: debitis
        required: true
        schema:
          type: string
  '/api/sPartnerPointWallet/getById/{id}':
    get:
      summary: 'Получить данные через ID - SPartnerPointWallet'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - SPartnerPointWallet
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: eos
        required: true
        schema:
          type: string
  '/api/sPartnerPointWalletRecord/get/{skip}/{take}':
    get:
      summary: 'Получить список - SPartnerPointWalletRecord'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 18
                  data: []
                properties:
                  count:
                    type: integer
                    example: 18
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerPointWalletRecord
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: laborum
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/sPartnerPointWalletRecord/getBySPartnerPointWalletId/{sPartnerPointWalletId}/{skip}/{take}':
    get:
      summary: 'Получить данные через SPartnerPointID - SPartnerPointWalletRecord'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerPointWalletRecord
      security: []
    parameters:
      -
        in: path
        name: sPartnerPointWalletId
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: harum
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
  '/api/sPartnerPointWalletRecord/getById/{id}':
    get:
      summary: 'Получить данные через ID - SPartnerPointWalletRecord'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - SPartnerPointWalletRecord
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: ut
        required: true
        schema:
          type: string
  '/api/sPartnerReceivedService/get/{skip}/{take}':
    get:
      summary: 'Получить список - SPartnerReceivedService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 18
                  data: []
                properties:
                  count:
                    type: integer
                    example: 18
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerReceivedService
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: enim
        required: true
        schema:
          type: string
  '/api/sPartnerReceivedService/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - SPartnerReceivedService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerReceivedService
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
  '/api/sPartnerReceivedService/getById/{id}':
    get:
      summary: 'Получить данные через ID - SPartnerReceivedService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - SPartnerReceivedService
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: ipsam
        required: true
        schema:
          type: string
  '/api/sPartnerServiceCategory/get/{skip}/{take}':
    get:
      summary: 'Получить список - SPartnerServiceCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 18
                  data: []
                properties:
                  count:
                    type: integer
                    example: 18
                  data:
                    type: array
                    example: []
      tags:
        - SPartnerServiceCategory
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: modi
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: corporis
        required: true
        schema:
          type: string
  '/api/sPartnerServiceCategory/getById/{id}':
    get:
      summary: 'Получить данные через ID - SPartnerServiceCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - SPartnerServiceCategory
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: omnis
        required: true
        schema:
          type: string
  '/api/service/get/{skip}/{take}':
    get:
      summary: 'Получить список - Service'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 171
                  data: []
                properties:
                  count:
                    type: integer
                    example: 171
                  data:
                    type: array
                    example: []
      tags:
        - 'Service - Сервис'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: reiciendis
        required: true
        schema:
          type: string
  '/api/service/getById/{id}':
    get:
      summary: 'Получить данные через ID - Service'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Service - Сервис'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: iure
        required: true
        schema:
          type: string
  '/api/serviceImage/get/{skip}/{take}':
    get:
      summary: 'Получить список - ServiceImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 14
                  data: []
                properties:
                  count:
                    type: integer
                    example: 14
                  data:
                    type: array
                    example: []
      tags:
        - ServiceImage
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/serviceImage/getById/{id}':
    get:
      summary: 'Получить данные через ID - ServiceImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - ServiceImage
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: maiores
        required: true
        schema:
          type: string
  '/api/serviceImage/getByServiceId/{stockId}/{skip}/{take}':
    get:
      summary: 'Получить данные через ServiceID - ServiceImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - ServiceImage
      security: []
    parameters:
      -
        in: path
        name: stockId
        description: ''
        example: quo
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: consectetur
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: nisi
        required: true
        schema:
          type: string
  '/api/serviceLimit/get/{skip}/{take}':
    get:
      summary: 'Получить список - ServiceLimit'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 3601
                  data: []
                properties:
                  count:
                    type: integer
                    example: 3601
                  data:
                    type: array
                    example: []
      tags:
        - 'ServiceLimit - СервисЛимит'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quae
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: exercitationem
        required: true
        schema:
          type: string
  '/api/serviceLimit/getById/{id}':
    get:
      summary: 'Получить данные через ID - ServiceLimit'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'ServiceLimit - СервисЛимит'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: eum
        required: true
        schema:
          type: string
  '/api/servicePrice/get/{skip}/{take}':
    get:
      summary: 'Получить список - ServicePrice'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 4785
                  data: []
                properties:
                  count:
                    type: integer
                    example: 4785
                  data:
                    type: array
                    example: []
      tags:
        - 'ServicePrice - СервисЦена'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/servicePrice/getById/{id}':
    get:
      summary: 'Получить данные через ID - ServicePrice'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'ServicePrice - СервисЦена'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: sed
        required: true
        schema:
          type: string
  '/api/serviceType/getById/{id}':
    get:
      summary: 'Получить данные через ID - ServiceType'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'ServiceType - СервисТип'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: consequuntur
        required: true
        schema:
          type: string
  '/api/serviceType/get/{skip}/{take}':
    get:
      summary: 'Получить список - ServiceType'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 21
                  data: []
                properties:
                  count:
                    type: integer
                    example: 21
                  data:
                    type: array
                    example: []
      tags:
        - 'ServiceType - СервисТип'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: consectetur
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: doloribus
        required: true
        schema:
          type: string
  '/api/stock/get/{skip}/{take}':
    get:
      summary: 'Получить список - Stock'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 4
                  data: []
                properties:
                  count:
                    type: integer
                    example: 4
                  data:
                    type: array
                    example: []
      tags:
        - 'Stock - Запас'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: incidunt
        required: true
        schema:
          type: string
  '/api/stock/getById/{id}':
    get:
      summary: 'Получить данные через ID - Stock'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Stock - Запас'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: est
        required: true
        schema:
          type: string
  '/api/stockImage/get/{skip}/{take}':
    get:
      summary: 'Получить список - StockImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 30
                  data: []
                properties:
                  count:
                    type: integer
                    example: 30
                  data:
                    type: array
                    example: []
      tags:
        - StockImage
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: eos
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
  '/api/stockImage/getById/{id}':
    get:
      summary: 'Получить данные через ID - StockImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - StockImage
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: aut
        required: true
        schema:
          type: string
  '/api/stockImage/getByStockId/{stockId}/{skip}/{take}':
    get:
      summary: 'Получить данные через StockID - StockImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - StockImage
      security: []
    parameters:
      -
        in: path
        name: stockId
        description: ''
        example: numquam
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: distinctio
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
  '/api/thirdPartyApp/get/{skip}/{take}':
    get:
      summary: 'Получить список - ThirdPartyApp'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 1
                  data: []
                properties:
                  count:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
      tags:
        - 'ThirdPartyApp - Стороннее приложение'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: illum
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
  '/api/thirdPartyApp/getById/{id}':
    get:
      summary: 'Получить данные через ID - ThirdPartyApp'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'ThirdPartyApp - Стороннее приложение'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: necessitatibus
        required: true
        schema:
          type: string
  '/api/transaction/get/{skip}/{take}':
    get:
      summary: 'Получить список - Transaction'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 11
                  data: []
                properties:
                  count:
                    type: integer
                    example: 11
                  data:
                    type: array
                    example: []
      tags:
        - 'Transaction - Транзакции'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: ad
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/transaction/getById/{id}':
    get:
      summary: 'Получить данные через ID - Transaction'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Transaction - Транзакции'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: qui
        required: true
        schema:
          type: string
  '/api/transactionToNonExistingUser/get/{skip}/{take}':
    get:
      summary: 'Получить список - TransactionToNonExistingUser'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'TransactionToNonExistingUser - Транзакция для несуществующего пользователя'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: soluta
        required: true
        schema:
          type: string
  '/api/transactionToNonExistingUser/getById/{id}':
    get:
      summary: 'Получить данные через ID - TransactionToNonExistingUser'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'TransactionToNonExistingUser - Транзакция для несуществующего пользователя'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: veritatis
        required: true
        schema:
          type: string
  '/api/user/getByPhoneAndPassword/{phone}/{password}':
    get:
      summary: 'Получить данные через Phone Password - User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'User - Пользователь'
      security: []
    parameters:
      -
        in: path
        name: phone
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: password
        description: ''
        example: natus
        required: true
        schema:
          type: string
  '/api/user/get/{skip}/{take}':
    get:
      summary: 'Получить список - User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 64366
                  data: []
                properties:
                  count:
                    type: integer
                    example: 64366
                  data:
                    type: array
                    example: []
      tags:
        - 'User - Пользователь'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: officiis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/user/getById/{id}':
    get:
      summary: 'Получить данные через ID - User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'User - Пользователь'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: explicabo
        required: true
        schema:
          type: string
  '/api/userCar/get/{skip}/{take}':
    get:
      summary: 'Получить список - UserCar'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 163
                  data: []
                properties:
                  count:
                    type: integer
                    example: 163
                  data:
                    type: array
                    example: []
      tags:
        - 'UserCar - ПользовательАвтомобиль'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: sunt
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/userCar/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - UserCar'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'UserCar - ПользовательАвтомобиль'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: animi
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: perferendis
        required: true
        schema:
          type: string
  '/api/userCar/getByCarModelId/{carModelId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CarModelID - UserCar'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'UserCar - ПользовательАвтомобиль'
      security: []
    parameters:
      -
        in: path
        name: carModelId
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: at
        required: true
        schema:
          type: string
  '/api/userCar/getById/{id}':
    get:
      summary: 'Получить данные через ID - UserCar'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'UserCar - ПользовательАвтомобиль'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: dolor
        required: true
        schema:
          type: string
  '/api/userImage/get/{skip}/{take}':
    get:
      summary: 'Получить список - UserImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 197
                  data: []
                properties:
                  count:
                    type: integer
                    example: 197
                  data:
                    type: array
                    example: []
      tags:
        - UserImage
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: reprehenderit
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: iste
        required: true
        schema:
          type: string
  '/api/userImage/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - UserImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 12
                  data: []
                properties:
                  count:
                    type: integer
                    example: 12
                  data:
                    type: array
                    example: []
      tags:
        - UserImage
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: delectus
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: quod
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: minima
        required: true
        schema:
          type: string
  '/api/userImage/getById/{id}':
    get:
      summary: 'Получить данные через ID - UserImage'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - UserImage
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: esse
        required: true
        schema:
          type: string
  '/api/userProfile/get/{skip}/{take}':
    get:
      summary: 'Получить список - UserProfile'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "SQLSTATE[42S22]: Column not found: 1054 Unknown column 'deleted_at' in 'where clause' (SQL: select count(*) as aggregate from `user_profiles` where `deleted_at` is null)"
                  exception: Illuminate\Database\QueryException
                  file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                  line: 759
                  trace:
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                      line: 719
                      function: runQueryCallback
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                      line: 421
                      function: run
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2630
                      function: select
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2618
                      function: runSelect
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 3154
                      function: 'Illuminate\Database\Query\{closure}'
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2619
                      function: onceWithColumns
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 3081
                      function: get
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 3009
                      function: aggregate
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                      line: 1834
                      function: count
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/app/Domain/Repositories/RepositoryEloquent.php
                      line: 110
                      function: __call
                      class: Illuminate\Database\Eloquent\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/app/Http/Controllers/Api/UserProfileController.php
                      line: 32
                      function: count
                      class: App\Domain\Repositories\UserProfile\UserProfileRepositoryEloquent
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: get
                      class: App\Http\Controllers\Api\UserProfileController
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 45
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 261
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 204
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 725
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 726
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 703
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 667
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 656
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 167
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestIpMiddleware.php
                      line: 45
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Sentry\Laravel\Http\SetRequestIpMiddleware
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestMiddleware.php
                      line: 31
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Sentry\Laravel\Http\SetRequestMiddleware
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Tracing/Middleware.php
                      line: 53
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Sentry\Laravel\Tracing\Middleware
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 142
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 111
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 299
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 287
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 89
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 45
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 222
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 179
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 116
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 123
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 80
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 56
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 55
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 37
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 651
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 139
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Command/Command.php
                      line: 308
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 124
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Application.php
                      line: 998
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Application.php
                      line: 299
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Application.php
                      line: 171
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 129
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/artisan
                      line: 37
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: "SQLSTATE[42S22]: Column not found: 1054 Unknown column 'deleted_at' in 'where clause' (SQL: select count(*) as aggregate from `user_profiles` where `deleted_at` is null)"
                  exception:
                    type: string
                    example: Illuminate\Database\QueryException
                  file:
                    type: string
                    example: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                  line:
                    type: integer
                    example: 759
                  trace:
                    type: array
                    example:
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                        line: 719
                        function: runQueryCallback
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                        line: 421
                        function: run
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2630
                        function: select
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2618
                        function: runSelect
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 3154
                        function: 'Illuminate\Database\Query\{closure}'
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2619
                        function: onceWithColumns
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 3081
                        function: get
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 3009
                        function: aggregate
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                        line: 1834
                        function: count
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/app/Domain/Repositories/RepositoryEloquent.php
                        line: 110
                        function: __call
                        class: Illuminate\Database\Eloquent\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/app/Http/Controllers/Api/UserProfileController.php
                        line: 32
                        function: count
                        class: App\Domain\Repositories\UserProfile\UserProfileRepositoryEloquent
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: get
                        class: App\Http\Controllers\Api\UserProfileController
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 45
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 261
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 204
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 725
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 726
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 703
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 667
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 656
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 167
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestIpMiddleware.php
                        line: 45
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Sentry\Laravel\Http\SetRequestIpMiddleware
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestMiddleware.php
                        line: 31
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Sentry\Laravel\Http\SetRequestMiddleware
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Tracing/Middleware.php
                        line: 53
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Sentry\Laravel\Tracing\Middleware
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 142
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 111
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 299
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 287
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 89
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 45
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 222
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 179
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 116
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 123
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 80
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 56
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 55
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 37
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 651
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 139
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Command/Command.php
                        line: 308
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 124
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Application.php
                        line: 998
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Application.php
                        line: 299
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Application.php
                        line: 171
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 129
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/artisan
                        line: 37
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
      tags:
        - UserProfile
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: adipisci
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/userProfile/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - UserProfile'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "SQLSTATE[42S22]: Column not found: 1054 Unknown column 'deleted_at' in 'where clause' (SQL: select count(*) as aggregate from `user_profiles` where (`user_id` = ratione) and `deleted_at` is null)"
                  exception: Illuminate\Database\QueryException
                  file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                  line: 759
                  trace:
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                      line: 719
                      function: runQueryCallback
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                      line: 421
                      function: run
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2630
                      function: select
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2618
                      function: runSelect
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 3154
                      function: 'Illuminate\Database\Query\{closure}'
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2619
                      function: onceWithColumns
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 3081
                      function: get
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 3009
                      function: aggregate
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                      line: 1834
                      function: count
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/app/Domain/Repositories/RepositoryEloquent.php
                      line: 110
                      function: __call
                      class: Illuminate\Database\Eloquent\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/app/Http/Controllers/Api/UserProfileController.php
                      line: 46
                      function: count
                      class: App\Domain\Repositories\UserProfile\UserProfileRepositoryEloquent
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: getByUserId
                      class: App\Http\Controllers\Api\UserProfileController
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 45
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 261
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 204
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 725
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 726
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 703
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 667
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 656
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 167
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestIpMiddleware.php
                      line: 45
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Sentry\Laravel\Http\SetRequestIpMiddleware
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestMiddleware.php
                      line: 31
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Sentry\Laravel\Http\SetRequestMiddleware
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Tracing/Middleware.php
                      line: 53
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Sentry\Laravel\Tracing\Middleware
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 142
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 111
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 299
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 287
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 89
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 45
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 222
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 179
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 116
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 123
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 80
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 56
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 55
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 37
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 651
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 139
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Command/Command.php
                      line: 308
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 124
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Application.php
                      line: 998
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Application.php
                      line: 299
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Application.php
                      line: 171
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 129
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/artisan
                      line: 37
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: "SQLSTATE[42S22]: Column not found: 1054 Unknown column 'deleted_at' in 'where clause' (SQL: select count(*) as aggregate from `user_profiles` where (`user_id` = ratione) and `deleted_at` is null)"
                  exception:
                    type: string
                    example: Illuminate\Database\QueryException
                  file:
                    type: string
                    example: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                  line:
                    type: integer
                    example: 759
                  trace:
                    type: array
                    example:
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                        line: 719
                        function: runQueryCallback
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                        line: 421
                        function: run
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2630
                        function: select
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2618
                        function: runSelect
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 3154
                        function: 'Illuminate\Database\Query\{closure}'
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2619
                        function: onceWithColumns
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 3081
                        function: get
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 3009
                        function: aggregate
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                        line: 1834
                        function: count
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/app/Domain/Repositories/RepositoryEloquent.php
                        line: 110
                        function: __call
                        class: Illuminate\Database\Eloquent\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/app/Http/Controllers/Api/UserProfileController.php
                        line: 46
                        function: count
                        class: App\Domain\Repositories\UserProfile\UserProfileRepositoryEloquent
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: getByUserId
                        class: App\Http\Controllers\Api\UserProfileController
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 45
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 261
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 204
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 725
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 726
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 703
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 667
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 656
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 167
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestIpMiddleware.php
                        line: 45
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Sentry\Laravel\Http\SetRequestIpMiddleware
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestMiddleware.php
                        line: 31
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Sentry\Laravel\Http\SetRequestMiddleware
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Tracing/Middleware.php
                        line: 53
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Sentry\Laravel\Tracing\Middleware
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 142
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 111
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 299
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 287
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 89
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 45
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 222
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 179
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 116
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 123
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 80
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 56
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 55
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 37
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 651
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 139
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Command/Command.php
                        line: 308
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 124
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Application.php
                        line: 998
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Application.php
                        line: 299
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Application.php
                        line: 171
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 129
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/artisan
                        line: 37
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
      tags:
        - UserProfile
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: ratione
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: quis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: nemo
        required: true
        schema:
          type: string
  '/api/userProfile/getById/{id}':
    get:
      summary: 'Получить данные через ID - UserProfile'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "SQLSTATE[42S22]: Column not found: 1054 Unknown column 'deleted_at' in 'where clause' (SQL: select * from `user_profiles` where `id` = consequatur and `deleted_at` is null limit 1)"
                  exception: Illuminate\Database\QueryException
                  file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                  line: 759
                  trace:
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                      line: 719
                      function: runQueryCallback
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                      line: 421
                      function: run
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2630
                      function: select
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2618
                      function: runSelect
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 3154
                      function: 'Illuminate\Database\Query\{closure}'
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2619
                      function: onceWithColumns
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                      line: 698
                      function: get
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                      line: 682
                      function: getModels
                      class: Illuminate\Database\Eloquent\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Concerns/BuildsQueries.php
                      line: 296
                      function: get
                      class: Illuminate\Database\Eloquent\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/app/Domain/Repositories/RepositoryEloquent.php
                      line: 104
                      function: first
                      class: Illuminate\Database\Eloquent\Builder
                      type: '->'
                    -
                      file: /var/www/admin-unified/app/Http/Controllers/Api/UserProfileController.php
                      line: 59
                      function: getById
                      class: App\Domain\Repositories\UserProfile\UserProfileRepositoryEloquent
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: getById
                      class: App\Http\Controllers\Api\UserProfileController
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 45
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 261
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 204
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 725
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 726
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 703
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 667
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 656
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 167
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestIpMiddleware.php
                      line: 45
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Sentry\Laravel\Http\SetRequestIpMiddleware
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestMiddleware.php
                      line: 31
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Sentry\Laravel\Http\SetRequestMiddleware
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Tracing/Middleware.php
                      line: 53
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Sentry\Laravel\Tracing\Middleware
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 142
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 111
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 299
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 287
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 89
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 45
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 222
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 179
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 116
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 123
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 80
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 56
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 55
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 37
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 651
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 139
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Command/Command.php
                      line: 308
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 124
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Application.php
                      line: 998
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Application.php
                      line: 299
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/symfony/console/Application.php
                      line: 171
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 129
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /var/www/admin-unified/artisan
                      line: 37
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: "SQLSTATE[42S22]: Column not found: 1054 Unknown column 'deleted_at' in 'where clause' (SQL: select * from `user_profiles` where `id` = consequatur and `deleted_at` is null limit 1)"
                  exception:
                    type: string
                    example: Illuminate\Database\QueryException
                  file:
                    type: string
                    example: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                  line:
                    type: integer
                    example: 759
                  trace:
                    type: array
                    example:
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                        line: 719
                        function: runQueryCallback
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                        line: 421
                        function: run
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2630
                        function: select
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2618
                        function: runSelect
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 3154
                        function: 'Illuminate\Database\Query\{closure}'
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2619
                        function: onceWithColumns
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                        line: 698
                        function: get
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                        line: 682
                        function: getModels
                        class: Illuminate\Database\Eloquent\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Database/Concerns/BuildsQueries.php
                        line: 296
                        function: get
                        class: Illuminate\Database\Eloquent\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/app/Domain/Repositories/RepositoryEloquent.php
                        line: 104
                        function: first
                        class: Illuminate\Database\Eloquent\Builder
                        type: '->'
                      -
                        file: /var/www/admin-unified/app/Http/Controllers/Api/UserProfileController.php
                        line: 59
                        function: getById
                        class: App\Domain\Repositories\UserProfile\UserProfileRepositoryEloquent
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: getById
                        class: App\Http\Controllers\Api\UserProfileController
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 45
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 261
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 204
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 725
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 726
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 703
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 667
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 656
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 167
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestIpMiddleware.php
                        line: 45
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Sentry\Laravel\Http\SetRequestIpMiddleware
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Http/SetRequestMiddleware.php
                        line: 31
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Sentry\Laravel\Http\SetRequestMiddleware
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/sentry/sentry-laravel/src/Sentry/Laravel/Tracing/Middleware.php
                        line: 53
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Sentry\Laravel\Tracing\Middleware
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 142
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 111
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 299
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 287
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 89
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 45
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 222
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 179
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 116
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 123
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 80
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 56
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 55
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 37
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 651
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 139
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Command/Command.php
                        line: 308
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 124
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Application.php
                        line: 998
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Application.php
                        line: 299
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/symfony/console/Application.php
                        line: 171
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 129
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /var/www/admin-unified/artisan
                        line: 37
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
      tags:
        - UserProfile
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: consequatur
        required: true
        schema:
          type: string
  '/api/wallet/get/{skip}/{take}':
    get:
      summary: 'Получить список - Wallet'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 4025
                  data: []
                properties:
                  count:
                    type: integer
                    example: 4025
                  data:
                    type: array
                    example: []
      tags:
        - 'Wallet - Бумажник'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: similique
        required: true
        schema:
          type: string
  '/api/wallet/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - Wallet'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Wallet - Бумажник'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: nisi
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: iste
        required: true
        schema:
          type: string
  '/api/wallet/getById/{id}':
    get:
      summary: 'Получить данные через ID - Wallet'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Wallet - Бумажник'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: corporis
        required: true
        schema:
          type: string
  '/api/walletRecord/get/{skip}/{take}':
    get:
      summary: 'Получить список - WalletRecord'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 152
                  data: []
                properties:
                  count:
                    type: integer
                    example: 152
                  data:
                    type: array
                    example: []
      tags:
        - 'WalletRecord - БумажникЗапись'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: quis
        required: true
        schema:
          type: string
  '/api/walletRecord/getByPaymentId/{paymentId}/{skip}/{take}':
    get:
      summary: 'Получить данные через PaymentID - WalletRecord'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'WalletRecord - БумажникЗапись'
      security: []
    parameters:
      -
        in: path
        name: paymentId
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: natus
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: id
        required: true
        schema:
          type: string
  '/api/walletRecord/getByWalletId/{walletId}/{skip}/{take}':
    get:
      summary: 'Получить данные через WalletID - WalletRecord'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'WalletRecord - БумажникЗапись'
      security: []
    parameters:
      -
        in: path
        name: walletId
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: iure
        required: true
        schema:
          type: string
  '/api/walletRecord/getById/{id}':
    get:
      summary: 'Получить данные через ID - WalletRecord'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'WalletRecord - БумажникЗапись'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: accusamus
        required: true
        schema:
          type: string
tags:
  -
    name: 'AutoPart - АвтомобильЗапчасти'
    description: ''
  -
    name: 'AutoPartCategory - АвтомобильЗапчастиКатегория'
    description: ''
  -
    name: AutoPartImage
    description: ''
  -
    name: 'AutoPartParam - АвтомобильЗапчастиПараметры'
    description: ''
  -
    name: 'AutoPartParamOption - АвтомобильЗапчастиПараметрыОпции'
    description: ''
  -
    name: 'AutoPartType - АвтомобильЗапчастиТип'
    description: ''
  -
    name: 'Car - Автомобиль'
    description: ''
  -
    name: 'CarBrand - АвтомобильБрэнд'
    description: ''
  -
    name: 'CarCategory - АвтомобильКатегория'
    description: ''
  -
    name: 'CarModel - АвтомобильМодель'
    description: ''
  -
    name: 'CarModelAveragePrice - АвтомобильМодельСредняяЦена'
    description: ''
  -
    name: 'Card - Карточка'
    description: ''
  -
    name: 'CardCategory - КарточкаКатегория'
    description: ''
  -
    name: 'CardRange - КарточкаДиапазон'
    description: ''
  -
    name: 'CardService - КарточкаСервис'
    description: ''
  -
    name: 'City - Город'
    description: ''
  -
    name: 'CityService - ГородСервис'
    description: ''
  -
    name: 'Code - Код'
    description: ''
  -
    name: 'Country - Страна'
    description: ''
  -
    name: 'Currency - Валюта'
    description: ''
  -
    name: 'Driver - Водитель'
    description: ''
  -
    name: 'EcoService - ЭкоСервис'
    description: ''
  -
    name: 'Gift - Подарок'
    description: ''
  -
    name: 'Image - Картинка'
    description: ''
  -
    name: 'InsuranceCategory - СтрахованияКатегория'
    description: ''
  -
    name: 'InsuranceCompany - СтрахованияКомпания'
    description: ''
  -
    name: 'InsuranceCompanyProduct - СтрахованияКомпанияПродукт'
    description: ''
  -
    name: 'InsuranceCompanyRequestLog - СтрахованияКомпанияЗапросЛог'
    description: ''
  -
    name: InsuranceImage
    description: ''
  -
    name: 'InsuranceKaskoPolicy - СтрахованияКаскоПолитика'
    description: ''
  -
    name: InsuranceLinkReferRecord
    description: ''
  -
    name: InsuranceSelect
    description: ''
  -
    name: InsuranceSelectOption
    description: ''
  -
    name: Lawyer
    description: ''
  -
    name: LawyerCity
    description: ''
  -
    name: LawyerContact
    description: ''
  -
    name: LawyerContactAccess
    description: ''
  -
    name: LawyerService
    description: ''
  -
    name: LawyerServicePivot
    description: ''
  -
    name: Message
    description: ''
  -
    name: 'MoneyOperation - ДеньгиОперация'
    description: ''
  -
    name: 'MoneyOperationType - ДеньгиОперацияТип'
    description: ''
  -
    name: 'News - Новости'
    description: ''
  -
    name: 'NewsCategory - НовостиКатегория'
    description: ''
  -
    name: 'OrderCard - ЗаказКарточка'
    description: ''
  -
    name: OrderCardOld
    description: ''
  -
    name: 'OrderService - ЗаказСервис'
    description: ''
  -
    name: OrderServiceService
    description: ''
  -
    name: 'Partner - Партнер'
    description: ''
  -
    name: PartnerCard
    description: ''
  -
    name: PartnerPurchase
    description: ''
  -
    name: 'Payment - Платеж'
    description: ''
  -
    name: 'PaymentSystem - ПлатежСистема'
    description: ''
  -
    name: 'Place - Места'
    description: ''
  -
    name: 'Recurrent - Повторяющийся'
    description: ''
  -
    name: 'Region - Регион'
    description: ''
  -
    name: SPartnerPoint
    description: ''
  -
    name: SPartnerPointCategory
    description: ''
  -
    name: SPartnerPointRequisite
    description: ''
  -
    name: SPartnerPointWallet
    description: ''
  -
    name: SPartnerPointWalletRecord
    description: ''
  -
    name: SPartnerReceivedService
    description: ''
  -
    name: SPartnerServiceCategory
    description: ''
  -
    name: 'Service - Сервис'
    description: ''
  -
    name: ServiceImage
    description: ''
  -
    name: 'ServiceLimit - СервисЛимит'
    description: ''
  -
    name: 'ServicePrice - СервисЦена'
    description: ''
  -
    name: 'ServiceType - СервисТип'
    description: ''
  -
    name: 'Stock - Запас'
    description: ''
  -
    name: StockImage
    description: ''
  -
    name: 'ThirdPartyApp - Стороннее приложение'
    description: ''
  -
    name: 'Transaction - Транзакции'
    description: ''
  -
    name: 'TransactionToNonExistingUser - Транзакция для несуществующего пользователя'
    description: ''
  -
    name: 'User - Пользователь'
    description: ''
  -
    name: 'UserCar - ПользовательАвтомобиль'
    description: ''
  -
    name: UserImage
    description: ''
  -
    name: UserProfile
    description: ''
  -
    name: 'Wallet - Бумажник'
    description: ''
  -
    name: 'WalletRecord - БумажникЗапись'
    description: ''
