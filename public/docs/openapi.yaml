openapi: 3.0.3
info:
  title: 'API документация'
  description: 'API документация для litro.kz'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/autoPart/get/{skip}/{take}':
    get:
      summary: 'Получить список - AutoPart'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'AutoPart - АвтомобильЗапчасти'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: laboriosam
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: consectetur
        required: true
        schema:
          type: string
  '/api/autoPart/getById/{id}':
    get:
      summary: 'Получить данные через ID - AutoPart'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'AutoPart - АвтомобильЗапчасти'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: enim
        required: true
        schema:
          type: string
  '/api/autoPartCategory/get/{skip}/{take}':
    get:
      summary: 'Получить список - AutoPartCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'AutoPartCategory - АвтомобильЗапчастиКатегория'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: modi
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: itaque
        required: true
        schema:
          type: string
  '/api/autoPartParam/get/{skip}/{take}':
    get:
      summary: 'Получить список - AutoPartParam'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'AutoPartParam - АвтомобильЗапчастиПараметры'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: earum
        required: true
        schema:
          type: string
  '/api/autoPartParamOption/get/{skip}/{take}':
    get:
      summary: 'Получить список - AutoPartParamOption'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'AutoPartParamOption - АвтомобильЗапчастиПараметрыОпции'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: itaque
        required: true
        schema:
          type: string
  '/api/autoPartType/get/{skip}/{take}':
    get:
      summary: 'Получить список - AutoPartType'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'AutoPartType - АвтомобильЗапчастиТип'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: sint
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/car/get/{skip}/{take}':
    get:
      summary: 'Получить список - Car'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Car - Автомобиль'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: vel
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: quae
        required: true
        schema:
          type: string
  '/api/car/getByOrderCardId/{orderCardId}':
    get:
      summary: 'Получить данные через OrderCardID - Car'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Car - Автомобиль'
      security: []
    parameters:
      -
        in: path
        name: orderCardId
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
  '/api/car/getById/{id}':
    get:
      summary: 'Получить данные через ID - Car'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Car - Автомобиль'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: est
        required: true
        schema:
          type: string
  '/api/carBrand/get/{skip}/{take}':
    get:
      summary: 'Получить список - CarBrand'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CarBrand - АвтомобильБрэнд'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: ab
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/carCategory/get/{skip}/{take}':
    get:
      summary: 'Получить список - CarCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CarCategory - АвтомобильКатегория'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/carModel/get/{skip}/{take}':
    get:
      summary: 'Получить список - CarModel'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CarModel - АвтомобильМодель'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: officiis
        required: true
        schema:
          type: string
  '/api/carModel/getByCarBrandId/{carBrandId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CarBrandID - CarModel'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CarModel - АвтомобильМодель'
      security: []
    parameters:
      -
        in: path
        name: carBrandId
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: ab
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: reiciendis
        required: true
        schema:
          type: string
  '/api/carModel/getById/{id}':
    get:
      summary: 'Получить данные через ID - CarModel'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Модель не найдена'
                properties:
                  message:
                    type: string
                    example: 'Модель не найдена'
      tags:
        - 'CarModel - АвтомобильМодель'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: quis
        required: true
        schema:
          type: string
  '/api/carModelAveragePrice/get/{skip}/{take}':
    get:
      summary: 'Получить список - CarModelAveragePrice'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CarModelAveragePrice - АвтомобильМодельСредняяЦена'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: quos
        required: true
        schema:
          type: string
  '/api/carModelAveragePrice/getByCarModelId/{carModelId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CarModelID - CarModelAveragePrice'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CarModelAveragePrice - АвтомобильМодельСредняяЦена'
      security: []
    parameters:
      -
        in: path
        name: carModelId
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: eum
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: hic
        required: true
        schema:
          type: string
  '/api/carModelAveragePrice/getById/{id}':
    get:
      summary: 'Получить данные через ID - CarModelAveragePrice'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'CarModelAveragePrice - АвтомобильМодельСредняяЦена'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: expedita
        required: true
        schema:
          type: string
  '/api/card/get/{skip}/{take}':
    get:
      summary: 'Получить список - Card'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Card - Карточка'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: a
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: enim
        required: true
        schema:
          type: string
  '/api/card/getById/{id}':
    get:
      summary: 'Получить данные через ID - Card'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Card - Карточка'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: aut
        required: true
        schema:
          type: string
  '/api/cardCategory/get/{skip}/{take}':
    get:
      summary: 'Получить список - CardCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardCategory - КарточкаКатегория'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quae
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  '/api/cardRange/get/{skip}/{take}':
    get:
      summary: 'Получить список - CardRange'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardRange - КарточкаДиапазон'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: voluptatibus
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: eos
        required: true
        schema:
          type: string
  '/api/cardRange/getByCardId/{cardId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CardID - CardRange'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardRange - КарточкаДиапазон'
      security: []
    parameters:
      -
        in: path
        name: cardId
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: vel
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: doloribus
        required: true
        schema:
          type: string
  '/api/cardRange/getByCityId/{cityId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CityID - CardRange'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardRange - КарточкаДиапазон'
      security: []
    parameters:
      -
        in: path
        name: cityId
        description: ''
        example: praesentium
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: labore
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/cardRange/getById/{id}':
    get:
      summary: 'Получить данные через ID - CardRange'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'CardRange - КарточкаДиапазон'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: perspiciatis
        required: true
        schema:
          type: string
  '/api/cardService/get/{skip}/{take}':
    get:
      summary: 'Получить список - CardService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardService - КарточкаСервис'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
  '/api/cardService/getByCardId/{cardId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CardID - CardService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardService - КарточкаСервис'
      security: []
    parameters:
      -
        in: path
        name: cardId
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
  '/api/cardService/getByServiceId/{cityId}/{skip}/{take}':
    get:
      summary: 'Получить данные через ServiceID - CardService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CardService - КарточкаСервис'
      security: []
    parameters:
      -
        in: path
        name: cityId
        description: ''
        example: ipsam
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: perferendis
        required: true
        schema:
          type: string
  '/api/cardService/getById/{id}':
    get:
      summary: 'Получить данные через ID - CardService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'CardService - КарточкаСервис'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: eum
        required: true
        schema:
          type: string
  '/api/category/get/{skip}/{take}':
    get:
      summary: 'Получить список - Category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Category - Категория'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: officiis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dolor
        required: true
        schema:
          type: string
  '/api/category/getById/{id}':
    get:
      summary: 'Получить данные через ID - Category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Category - Категория'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: corrupti
        required: true
        schema:
          type: string
  '/api/city/get/{skip}/{take}':
    get:
      summary: 'Получить список - City'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'City - Город'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: adipisci
        required: true
        schema:
          type: string
  '/api/cityService/get/{skip}/{take}':
    get:
      summary: 'Получить список - CityService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CityService - ГородСервис'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: perspiciatis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: cum
        required: true
        schema:
          type: string
  '/api/cityService/getByServiceId/{serviceId}/{skip}/{take}':
    get:
      summary: 'Получить данные через ServiceID - CityService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CityService - ГородСервис'
      security: []
    parameters:
      -
        in: path
        name: serviceId
        description: ''
        example: eaque
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dignissimos
        required: true
        schema:
          type: string
  '/api/cityService/getByCityId/{cityId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CityID - CityService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'CityService - ГородСервис'
      security: []
    parameters:
      -
        in: path
        name: cityId
        description: ''
        example: repellendus
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: illo
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: velit
        required: true
        schema:
          type: string
  '/api/cityService/getById/{id}':
    get:
      summary: 'Получить данные через ID - CityService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'CityService - ГородСервис'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: explicabo
        required: true
        schema:
          type: string
  /api/code/create:
    post:
      summary: 'Создать - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Code - Код'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: validation.max.
                  example: uoderqlvyvtvrdcnykgvuytkoieuvjlelkebbtzimkozmaiqcsgtswbkjgmmvwdfjundfdnclyrecoawubsfgomgwxdrasonfhuzboewozskuwebootjcobqepxthyhwbbquytlerotyekyvgdsvnkfmwhcvldjpmwhr
                email:
                  type: string
                  description: validation.max.
                  example: tudgtgxavyhnvblwietsrhnubqhzasnddnictojgsbfcjcemcqbpanoynxpofmphtszqvqoywebcynbxuocjwgodgcyqydsycjitxucjawvoljjjerrmvfkwweazqvlchjbtwakpmskfjhhoeaiyzivnsrcqugqawddbxg
      security: []
  /api/code/update:
    post:
      summary: 'Обновить - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Code - Код'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: validation.max.
                  example: lusxolhfzouwxzzytwskzkeqosvbzvbjcxwjiprhlsvhqubvhmkvlzzyxlalbxu
                email:
                  type: string
                  description: validation.max.
                  example: yauhqjmeacyefjokywxzummrnchjbhbznggvmcr
                code:
                  type: integer
                  description: 'validation.min validation.max.'
                  example: 5722
              required:
                - code
      security: []
  '/api/code/get/{skip}/{take}':
    get:
      summary: 'Получить список - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Code - Код'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: pariatur
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dolore
        required: true
        schema:
          type: string
  '/api/code/getByPhone/{phone}':
    get:
      summary: 'Получить данные через Phone - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Code - Код'
      security: []
    parameters:
      -
        in: path
        name: phone
        description: ''
        example: perspiciatis
        required: true
        schema:
          type: string
  '/api/code/getByEmail/{email}':
    get:
      summary: 'Получить данные через Email - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Code - Код'
      security: []
    parameters:
      -
        in: path
        name: email
        description: ''
        example: accusantium
        required: true
        schema:
          type: string
  '/api/code/getById/{id}':
    get:
      summary: 'Получить данные через ID - Code'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Code - Код'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: ipsum
        required: true
        schema:
          type: string
  '/api/country/get/{skip}/{take}':
    get:
      summary: 'Получить список - Country'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Country - Страна'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: beatae
        required: true
        schema:
          type: string
  '/api/currency/get/{skip}/{take}':
    get:
      summary: 'Получить список - Currency'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Currency - Валюта'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: fuga
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/driver/get/{skip}/{take}':
    get:
      summary: 'Получить список - Driver'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Driver - Водитель'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
  '/api/driver/getByOrderCardId/{orderCardId}':
    get:
      summary: 'Получить данные через OrderCardID - Driver'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Driver - Водитель'
      security: []
    parameters:
      -
        in: path
        name: orderCardId
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/driver/getById/{id}':
    get:
      summary: 'Получить данные через ID - Driver'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Driver - Водитель'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: deleniti
        required: true
        schema:
          type: string
  '/api/ecoService/get/{skip}/{take}':
    get:
      summary: 'Получить список - EcoService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'EcoService - ЭкоСервис'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: ea
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: quo
        required: true
        schema:
          type: string
  '/api/ecoService/getById/{id}':
    get:
      summary: 'Получить данные через ID - EcoService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'EcoService - ЭкоСервис'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: excepturi
        required: true
        schema:
          type: string
  '/api/gift/get/{skip}/{take}':
    get:
      summary: 'Получить список - Gift'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Gift - Подарок'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: eius
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: amet
        required: true
        schema:
          type: string
  '/api/gift/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - Gift'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Gift - Подарок'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: perspiciatis
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: illo
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dicta
        required: true
        schema:
          type: string
  '/api/gift/getByCardId/{cardId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CardID - Gift'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Gift - Подарок'
      security: []
    parameters:
      -
        in: path
        name: cardId
        description: ''
        example: fugiat
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: nam
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: ipsa
        required: true
        schema:
          type: string
  '/api/gift/getById/{id}':
    get:
      summary: 'Получить данные через ID - Gift'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Gift - Подарок'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: quis
        required: true
        schema:
          type: string
  '/api/image/get/{skip}/{take}':
    get:
      summary: 'Получить список - Image'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Image - Картинка'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: atque
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: exercitationem
        required: true
        schema:
          type: string
  '/api/image/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - Image'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Image - Картинка'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: laborum
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: quos
        required: true
        schema:
          type: string
  '/api/image/getById/{id}':
    get:
      summary: 'Получить данные через ID - Image'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Image - Картинка'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: voluptas
        required: true
        schema:
          type: string
  '/api/moneyOperation/get/{skip}/{take}':
    get:
      summary: 'Получить список - MoneyOperation'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'MoneyOperation - ДеньгиОперация'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: voluptate
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
  '/api/moneyOperation/getById/{id}':
    get:
      summary: 'Получить данные через ID - MoneyOperation'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'MoneyOperation - ДеньгиОперация'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: illum
        required: true
        schema:
          type: string
  '/api/moneyOperationType/get/{skip}/{take}':
    get:
      summary: 'Получить список - MoneyOperationType'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'MoneyOperationType - ДеньгиОперацияТип'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: libero
        required: true
        schema:
          type: string
  '/api/moneyOperationType/getById/{id}':
    get:
      summary: 'Получить данные через ID - MoneyOperationType'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'MoneyOperationType - ДеньгиОперацияТип'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: laborum
        required: true
        schema:
          type: string
  '/api/news/get/{skip}/{take}':
    get:
      summary: 'Получить список - News'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'News - Новости'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: eos
        required: true
        schema:
          type: string
  '/api/news/getById/{id}':
    get:
      summary: 'Получить данные через ID - News'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'News - Новости'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: et
        required: true
        schema:
          type: string
  '/api/newsCategory/get/{skip}/{take}':
    get:
      summary: 'Получить список - NewsCategory'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'NewsCategory - НовостиКатегория'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: perspiciatis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: iusto
        required: true
        schema:
          type: string
  '/api/orderCard/get/{skip}/{take}':
    get:
      summary: 'Получить список - OrderCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderCard - ЗаказКарточка'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quae
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: id
        required: true
        schema:
          type: string
  '/api/orderCard/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - OrderCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderCard - ЗаказКарточка'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: reprehenderit
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
  '/api/orderCard/getByCardId/{cardId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CardID - OrderCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderCard - ЗаказКарточка'
      security: []
    parameters:
      -
        in: path
        name: cardId
        description: ''
        example: libero
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: praesentium
        required: true
        schema:
          type: string
  '/api/orderCard/getById/{id}':
    get:
      summary: 'Получить данные через ID - OrderCard'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'OrderCard - ЗаказКарточка'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: sit
        required: true
        schema:
          type: string
  '/api/orderService/get/{skip}/{take}':
    get:
      summary: 'Получить список - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: quo
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: occaecati
        required: true
        schema:
          type: string
  '/api/orderService/getByUserId/{userId}/{skip}/{take}':
    get:
      summary: 'Получить данные через UserID - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: inventore
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: porro
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: maiores
        required: true
        schema:
          type: string
  '/api/orderService/getByCityId/{cityId}/{skip}/{take}':
    get:
      summary: 'Получить данные через CityID - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: cityId
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/orderService/getByPlaceId/{placeId}/{skip}/{take}':
    get:
      summary: 'Получить данные через PlaceID - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: placeId
        description: ''
        example: provident
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: quam
        required: true
        schema:
          type: string
  '/api/orderService/getByOrderCardId/{orderCardId}/{skip}/{take}':
    get:
      summary: 'Получить данные через OrderCardID - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: orderCardId
        description: ''
        example: atque
        required: true
        schema:
          type: string
      -
        in: path
        name: skip
        description: ''
        example: dolores
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: molestias
        required: true
        schema:
          type: string
  '/api/orderService/getById/{id}':
    get:
      summary: 'Получить данные через ID - OrderService'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'OrderService - ЗаказСервис'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: sint
        required: true
        schema:
          type: string
  '/api/region/get/{skip}/{take}':
    get:
      summary: 'Получить список - Region'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Region - Регион'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/service/get/{skip}/{take}':
    get:
      summary: 'Получить список - Service'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'Service - Сервис'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: pariatur
        required: true
        schema:
          type: string
  '/api/service/getById/{id}':
    get:
      summary: 'Получить данные через ID - Service'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'Service - Сервис'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: eligendi
        required: true
        schema:
          type: string
  '/api/serviceLimit/get/{skip}/{take}':
    get:
      summary: 'Получить список - ServiceLimit'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'ServiceLimit - СервисЛимит'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: fuga
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/serviceLimit/getById/{id}':
    get:
      summary: 'Получить данные через ID - ServiceLimit'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'ServiceLimit - СервисЛимит'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: repudiandae
        required: true
        schema:
          type: string
  '/api/servicePrice/get/{skip}/{take}':
    get:
      summary: 'Получить список - ServicePrice'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'ServicePrice - СервисЦена'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: labore
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/servicePrice/getById/{id}':
    get:
      summary: 'Получить данные через ID - ServicePrice'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'ServicePrice - СервисЦена'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: exercitationem
        required: true
        schema:
          type: string
  '/api/serviceType/getById/{id}':
    get:
      summary: 'Получить данные через ID - ServiceType'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - 'ServiceType - СервисТип'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the getById.'
        example: quam
        required: true
        schema:
          type: string
  '/api/serviceType/get/{skip}/{take}':
    get:
      summary: 'Получить список - ServiceType'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 0
                  data: []
                properties:
                  count:
                    type: integer
                    example: 0
                  data:
                    type: array
                    example: []
      tags:
        - 'ServiceType - СервисТип'
      security: []
    parameters:
      -
        in: path
        name: skip
        description: ''
        example: a
        required: true
        schema:
          type: string
      -
        in: path
        name: take
        description: ''
        example: quae
        required: true
        schema:
          type: string
tags:
  -
    name: 'AutoPart - АвтомобильЗапчасти'
    description: ''
  -
    name: 'AutoPartCategory - АвтомобильЗапчастиКатегория'
    description: ''
  -
    name: 'AutoPartParam - АвтомобильЗапчастиПараметры'
    description: ''
  -
    name: 'AutoPartParamOption - АвтомобильЗапчастиПараметрыОпции'
    description: ''
  -
    name: 'AutoPartType - АвтомобильЗапчастиТип'
    description: ''
  -
    name: 'Car - Автомобиль'
    description: ''
  -
    name: 'CarBrand - АвтомобильБрэнд'
    description: ''
  -
    name: 'CarCategory - АвтомобильКатегория'
    description: ''
  -
    name: 'CarModel - АвтомобильМодель'
    description: ''
  -
    name: 'CarModelAveragePrice - АвтомобильМодельСредняяЦена'
    description: ''
  -
    name: 'Card - Карточка'
    description: ''
  -
    name: 'CardCategory - КарточкаКатегория'
    description: ''
  -
    name: 'CardRange - КарточкаДиапазон'
    description: ''
  -
    name: 'CardService - КарточкаСервис'
    description: ''
  -
    name: 'Category - Категория'
    description: ''
  -
    name: 'City - Город'
    description: ''
  -
    name: 'CityService - ГородСервис'
    description: ''
  -
    name: 'Code - Код'
    description: ''
  -
    name: 'Country - Страна'
    description: ''
  -
    name: 'Currency - Валюта'
    description: ''
  -
    name: 'Driver - Водитель'
    description: ''
  -
    name: 'EcoService - ЭкоСервис'
    description: ''
  -
    name: 'Gift - Подарок'
    description: ''
  -
    name: 'Image - Картинка'
    description: ''
  -
    name: 'MoneyOperation - ДеньгиОперация'
    description: ''
  -
    name: 'MoneyOperationType - ДеньгиОперацияТип'
    description: ''
  -
    name: 'News - Новости'
    description: ''
  -
    name: 'NewsCategory - НовостиКатегория'
    description: ''
  -
    name: 'OrderCard - ЗаказКарточка'
    description: ''
  -
    name: 'OrderService - ЗаказСервис'
    description: ''
  -
    name: 'Region - Регион'
    description: ''
  -
    name: 'Service - Сервис'
    description: ''
  -
    name: 'ServiceLimit - СервисЛимит'
    description: ''
  -
    name: 'ServicePrice - СервисЦена'
    description: ''
  -
    name: 'ServiceType - СервисТип'
    description: ''
